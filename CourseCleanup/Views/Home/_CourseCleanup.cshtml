@using CourseCleanup.Models
@model HomeViewModel


@Html.Partial("_IndexHeader")

<section id="loginForm">
    @using (Html.BeginForm())
    {
        @Html.HiddenFor(m => m.Terms)
        @Html.HiddenFor(m => m.UserEmail);
        @Html.HiddenFor(m => m.Authorized);

        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group input-group">
            @Html.LabelFor(m => m.StartTerm, new { @class = "control-label" })
            @Html.DropDownListFor(m => m.StartTerm, Model.Terms, new { @class = "form-control" })
        </div>
        <div class="form-group input-group">
            @Html.LabelFor(m => m.EndTerm, new { @class = "control-label" })
            @Html.DropDownListFor(m => m.EndTerm, Model.Terms, new { @class = "form-control" })
        </div>

        <div class="form-group">
            <button type="submit" class="btn btn-default">Submit</button>
        </div>
    }
</section>


@Html.ActionLink("View Deleted Courses", "DeletedCoursesReport", "Report")

<hr />
<h2>Course Search Status</h2>
<table class="table table-striped">
    <thead>
        <tr>
            <th><label class="control-label">Date Created</label></th>
            <th><label class="control-label">Last Updated</label></th>
            <th><label class="control-label">Start Term</label></th>
            <th><label class="control-label">End Term</label></th>
            <th><label class="control-label">Submitted By</label></th>
            <th><label class="control-label">Status</label></th>
            <th><label class="control-label">Status Message</label></th>
            <th><label class="control-label">Report</label></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var search in Model.CourseSearchQueues.OrderByDescending(x => x.DateCreated))
        {
            <tr>
                <td>@search.DateCreated.ToString("MM/yyyy hh:mm")</td>
                <td>@(search.LastUpdated.HasValue ? search.LastUpdated.Value.ToString("MM/yyyy hh:mm") : "")</td>
                <td>@Model.Terms.First(x => x.Value == search.StartTermId).Text</td>
                <td>@Model.Terms.First(x => x.Value == search.EndTermId).Text</td>
                <td>@search.SubmittedByEmail</td>
                <td>@search.Status</td>
                <td>@search.StatusMessage</td>
                <td>@Html.ActionLink("View Report", "Index", "Report", routeValues: new { courseSearchQueueId = search.Id }, htmlAttributes: null)</td>
            </tr>
        }
    </tbody>
</table>